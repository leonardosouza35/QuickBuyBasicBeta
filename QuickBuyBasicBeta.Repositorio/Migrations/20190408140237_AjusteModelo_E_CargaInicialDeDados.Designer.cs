// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuickBuyBasicBeta.Repositorio.Contexto;

namespace QuickBuyBasicBeta.Repositorio.Migrations
{
    [DbContext(typeof(QuickBBContexto))]
    [Migration("20190408140237_AjusteModelo_E_CargaInicialDeDados")]
    partial class AjusteModelo_E_CargaInicialDeDados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("QuickBuyBasicBeta.Dominio.Entidades.ItemVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProdutoId");

                    b.Property<int>("Quantidade");

                    b.Property<int>("VendaId");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("ItensVenda");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProdutoId = 1,
                            Quantidade = 0,
                            VendaId = 1
                        });
                });

            modelBuilder.Entity("QuickBuyBasicBeta.Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Smartphone Samsung Galaxy J8 64GB Dual Chip Android 8.0 Tela 6 Octa - Core 1.8GHz 4G Câmera 16MP F1.7 + 5MP F1.9(Dual Cam) - Prata",
                            Nome = "Celular Samsung",
                            Valor = 1249.00m
                        });
                });

            modelBuilder.Entity("QuickBuyBasicBeta.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "leo@haacademy.co",
                            Nome = "Leonardo",
                            Senha = "abc23",
                            SobreNome = "Souza"
                        });
                });

            modelBuilder.Entity("QuickBuyBasicBeta.Dominio.Entidades.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataVenda");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Vendas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataVenda = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("QuickBuyBasicBeta.Dominio.Entidades.ItemVenda", b =>
                {
                    b.HasOne("QuickBuyBasicBeta.Dominio.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuickBuyBasicBeta.Dominio.Entidades.Venda", "Venda")
                        .WithMany("ItensVenda")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuickBuyBasicBeta.Dominio.Entidades.Venda", b =>
                {
                    b.HasOne("QuickBuyBasicBeta.Dominio.Entidades.Usuario")
                        .WithMany("Vendas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
